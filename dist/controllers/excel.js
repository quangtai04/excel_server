"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.excelController = exports.parserExcel2Json = void 0;
const { GoogleSpreadsheet } = require("google-spreadsheet");
const { JWT } = require("google-auth-library");
const response_1 = require("../helpers/response");
const xlsParser_1 = require("../util/xlsParser");
const fs_1 = __importDefault(require("fs"));
const GOOGLE_SERVICE_ACCOUNT_EMAIL = "download-excel@hoclieu-cloud-storage.iam.gserviceaccount.com";
const GOOGLE_PRIVATE_KEY = "-----BEGIN PRIVATE KEY-----\nMIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQCylnPEWlZrIiqQ\nuhS0yocKyH6rlEeRSqJoVYz7D6yp1Cfk1oiHilz5B58RRMGCLKaxmvmi7GiPqNO5\nL5XcRa/+Q1G+POuC7+koLYwVOUymmf8PEgGk/wDS/pSQxIAtQ7+UlhSP3hsg+/by\nAJz6AzapssDJw8O2f4do5U2kp89jxJxou4O3hv8dvS11S7msnMs6YApP9CPHfkyo\nscgzuYvm51OxPdFuf5/ej6ULxb+gHeIHZzzY2lj5MLgFumyjtXNSsZ26IOuQbTk+\nd4o68xYmmCCE9Xzx9jyogKlN5TJsjr8oqj+4uyV7vc58+Pae1ZOPcq9adGz32XoJ\ndCX0UI8hAgMBAAECggEAAe5G5g2Demufb0U3Fi12iGHFSScvNGViDDPOPxnK6DhN\nLkf5qHx7l5d9teQ1nYnhy1EFfVL7aOqJJSBcHoo+1juwVti7WO+tfcPrTCtHIRR7\nDv9xoYY+bNQ4MzilTvKjmpBvpw6zzKIeEqekytOte+gdCzljeetBoaXRVnQYKwgS\nIphzmME+eaoUlRrFFgn0OW5WP0NiQa95DysLaB98ZnmVZQQkSlmCNAh1HvUWdcR2\nXuKwek/AaZGHcZ4OcYJiRi8Ua0K/SfXxQ8VMkcjcAenWh0PLshaw9h+vi5+4OrSF\nNCOHePtSz368/A08Dkdo0tGXvMhPwGojD0RKcJhyqQKBgQDd4R0ZLQtX2wcDqdpc\n7fgM5dcILd/8Vkilfu/MDqGrIopIQUhvLWVXvTDmbQvDuQwwfTt2w7vXPPW04LkO\ntDMEMCIVw17jn3j6Oet7UvaAZ7GNlrZhZSW3db3QDXKsOVRkWqZbqoSrceRA8vWX\nHvVbgAK1kdjN3b/oeGS8tL8WGQKBgQDODQtyKL9I7sc8cMNqRb4D2Qlyw5heowB7\nlwPhjvrBHy1qH6FUaEleK4TWOdjM0dNF9KyZNHwjtdanvdZlEAtTouB8kKybEWcu\nJ7THJEpH0N8JpH+Vto5aa5k46ns37erqXb7mxsNXKawYkSzW1LCYU3QM24N6G1wL\nB7pTBiGSSQKBgDcIQc5fxMN6uOeotld8UpzoWQhXUInm4MfjjxievGyU+ZVoU833\nhX5Yl4tfmp5mBGb2eMxBShLdtNezMVM7ULgGND4PojZ09G2j9gs1jZxVm81Rh1Tq\n4Ir7ciPrYfjjk1H8xexQg+1+Jy4Q1Ocxr4uNWZ6tWQfeq12+lsXTUt3pAoGALrbS\nY31NcLGBxfgitZM+Mw0fkT866im2UE66eIa73tC8sRSetM434/ul0BOpTTY82d1Q\nzCMUCdyN39WwJ5Vtm/aPQm5iU32skNA7sfJOTN3T0xHSQxTyTRmb0UWHzfRIj/3U\n6+kgHEC8XY18RvBNYRt6cffKZQKS6YVE/tGjBtECgYEAi7nGPyVV7M+lh174nL2y\n1jTKe22K1/87P0RSaNzDBpnQXo/6YFHZTTXVQ7hKP3v+ipjTro3mu8ATbhxsZfLm\nPP4M0SbsVgZ+F3JIhWBQAIIXMtmEi+1Gnepia2u37qsu8WGbXPKoN5JgSVLnwjSr\n35rF3LHddtlasJ1zBDJLMNs=\n-----END PRIVATE KEY-----\n";
const serviceAccountAuth = new JWT({
    // env var values here are copied from service account credentials generated by google
    // see "Authentication" section in docs for more info
    email: GOOGLE_SERVICE_ACCOUNT_EMAIL,
    key: GOOGLE_PRIVATE_KEY,
    scopes: [
        "https://www.googleapis.com/auth/spreadsheets",
        "https://www.googleapis.com/auth/drive.file",
    ],
});
const parserExcel2Json = (req, res) => __awaiter(void 0, void 0, void 0, function* () {
    const { sheet_id } = req.body;
    try {
        const doc = new GoogleSpreadsheet(sheet_id, serviceAccountAuth);
        yield doc.loadInfo();
        const xlsxBuffer = yield doc.downloadAsXLSX();
        const file_name = new Date().toISOString();
        if (!fs_1.default.existsSync("./public/excel")) {
            yield fs_1.default.mkdirSync("./public/excel");
        }
        const file_path = `./public/excel/${file_name}.xlsx`;
        yield fs_1.default.writeFileSync(file_path, Buffer.from(xlsxBuffer));
        const json = { data: {} };
        yield xlsParser_1.xlsxParser.run(file_path, json);
        fs_1.default.unlink(file_path, (err) => {
            if (err) {
                console.error(err);
            }
        });
        return (0, response_1.handleSuccess)(res, json, "Thành công");
    }
    catch (err) {
        return (0, response_1.handleError)(res, "Lỗi không xác định", err);
    }
});
exports.parserExcel2Json = parserExcel2Json;
exports.excelController = {
    parserExcel2Json: exports.parserExcel2Json,
};
//# sourceMappingURL=excel.js.map